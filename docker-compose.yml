version: '3.8'

services:
  # MySQL Database
  strapi-mysql:
    image: mysql:8.0
    container_name: strapi-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - strapi_mysql_data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
      - strapi_mysql_logs:/var/log/mysql
      - /tmp:/tmp
    # ports:
    #   - "3306:3306"
    command: >
      --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-buffer-pool-size=256M --max-connections=1000 --skip-name-resolve --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
    networks:
      - strapi_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DATABASE_USERNAME}", "-p${DATABASE_PASSWORD}" ]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 80s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Strapi Application
  strapi-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: strapi-app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_HOST: strapi-mysql
      NODE_ENV: production
    volumes:
      - ./public/uploads:/app/public/uploads
      - strapi_app_uploads:/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi_network
    depends_on:
      strapi-mysql:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1337/admin" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  strapi-nginx:
    image: nginx:alpine
    container_name: strapi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./public/uploads:/var/www/uploads:ro
      - strapi_nginx_logs:/var/log/nginx
    networks:
      - strapi_network
    depends_on:
      strapi-app:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  strapi_mysql_data:
    driver: local
  strapi_mysql_logs:
    driver: local
  strapi_app_uploads:
    driver: local
  strapi_nginx_logs:
    driver: local

networks:
  strapi_network:
    driver: bridge
